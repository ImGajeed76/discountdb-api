basePath: /api/v1
definitions:
  models.Coupon:
    properties:
      categories:
        description: Metadata
        items:
          type: string
        type: array
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      discount_type:
        $ref: '#/definitions/models.DiscountType'
      discount_value:
        type: number
      down_votes:
        items:
          type: string
        type: array
      end_date:
        type: string
      id:
        description: Required Information
        type: integer
      maximum_discount_amount:
        type: number
      merchant_name:
        type: string
      merchant_url:
        type: string
      minimum_purchase_amount:
        type: number
      regions:
        description: countries/regions where valid
        items:
          type: string
        type: array
      score:
        description: Score calculated by db
        type: number
      start_date:
        description: Optional Validity Information
        type: string
      store_type:
        description: '"online", "in_store", "both"'
        type: string
      tags:
        items:
          type: string
        type: array
      terms_conditions:
        type: string
      title:
        type: string
      up_votes:
        description: Voting Information
        items:
          type: string
        type: array
    type: object
  models.CouponsSearchResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Coupon'
        type: array
      limit:
        example: 10
        type: integer
      offset:
        example: 0
        type: integer
      total:
        example: 100
        type: integer
    type: object
  models.DiscountType:
    enum:
    - PERCENTAGE_OFF
    - FIXED_AMOUNT
    - BOGO
    - FREE_SHIPPING
    type: string
    x-enum-varnames:
    - PercentageOff
    - FixedAmount
    - BOGO
    - FreeShipping
  models.ErrorResponse:
    properties:
      message:
        example: Internal server error
        type: string
    type: object
  models.HealthCheckResponse:
    properties:
      status:
        example: ok
        type: string
      version:
        example: "1.0"
        type: string
    type: object
  models.Merchant:
    properties:
      merchant_name:
        example: merchant1
        type: string
      merchant_url:
        example: https://merchant1.com
        type: string
    type: object
  models.MerchantResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Merchant'
        type: array
      total:
        example: 2
        type: integer
    type: object
  models.VoteBody:
    properties:
      dir:
        type: string
      id:
        type: integer
    type: object
  syrup.Coupon:
    properties:
      code:
        example: DISCOUNT10
        type: string
      description:
        example: Get 10% off
        type: string
      id:
        example: "123"
        type: string
      merchant_name:
        example: Amazon
        type: string
      score:
        example: 5
        type: number
      title:
        example: Discount
        type: string
    type: object
  syrup.CouponList:
    properties:
      coupons:
        items:
          $ref: '#/definitions/syrup.Coupon'
        type: array
      total:
        type: integer
    type: object
  syrup.ErrorResponse:
    properties:
      error:
        example: Internal Server Error
        type: string
      message:
        example: Something went wrong
        type: string
    type: object
  syrup.Success:
    properties:
      success:
        example: "true"
        type: string
    type: object
  syrup.VersionInfo:
    properties:
      provider:
        example: DiscountDB
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
host: api.discountdb.ch
info:
  contact: {}
  description: This is the DiscountDB API documentation
  termsOfService: http://swagger.io/terms/
  title: DiscountDB API
  version: "1.0"
paths:
  /coupons/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a single coupon by its ID
      parameters:
      - description: Coupon ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Coupon'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get coupon by ID
      tags:
      - coupons
  /coupons/merchants:
    get:
      description: Retrieve a list of all merchants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MerchantResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all merchants
      tags:
      - merchants
  /coupons/search:
    get:
      consumes:
      - application/json
      description: Retrieve a list of coupons with optional search, sorting, and pagination
      parameters:
      - description: Search query string
        in: query
        name: q
        type: string
      - default: newest
        description: Sort order (newest, oldest, high_score, low_score)
        enum:
        - newest
        - oldest
        - high_score
        - low_score
        in: query
        name: sort_by
        type: string
      - default: 10
        description: Number of items per page
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 0
        description: Number of items to skip
        in: query
        minimum: 0
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CouponsSearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get coupons with filtering and pagination
      tags:
      - coupons
  /coupons/vote:
    post:
      consumes:
      - application/json
      description: Vote on a coupon by ID
      parameters:
      - description: Vote body
        in: body
        name: vote
        required: true
        schema:
          $ref: '#/definitions/models.VoteBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Vote on a coupon
      tags:
      - votes
  /health:
    get:
      consumes:
      - application/json
      description: Get API health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HealthCheckResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Health check endpoint
      tags:
      - health
  /syrup/coupons:
    get:
      description: Returns a paginated list of coupons for a specific domain
      parameters:
      - description: Optional API key for authentication
        in: header
        name: X-Syrup-API-Key
        type: string
      - description: The website domain to fetch coupons for
        in: query
        name: domain
        required: true
        type: string
      - default: 20
        description: Maximum number of coupons to return
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: 0
        description: Number of coupons to skip
        in: query
        minimum: 0
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          headers:
            X-RateLimit-Limit:
              description: The maximum number of requests allowed per time window
              type: string
            X-RateLimit-Remaining:
              description: The number of requests remaining in the time window
              type: string
            X-RateLimit-Reset:
              description: The time when the rate limit window resets (Unix timestamp)
              type: string
          schema:
            $ref: '#/definitions/syrup.CouponList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "429":
          description: Too Many Requests
          headers:
            X-RateLimit-RetryAfter:
              description: Time to wait before retrying (seconds)
              type: integer
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
      summary: List Coupons
      tags:
      - syrup
  /syrup/coupons/invalid/{id}:
    post:
      description: Report that a coupon code failed to work
      parameters:
      - description: Optional API key for authentication
        in: header
        name: X-Syrup-API-Key
        type: string
      - description: The ID of the coupon
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          headers:
            X-RateLimit-Limit:
              description: The maximum number of requests allowed per time window
              type: string
            X-RateLimit-Remaining:
              description: The number of requests remaining in the time window
              type: string
            X-RateLimit-Reset:
              description: The time when the rate limit window resets (Unix timestamp)
              type: string
          schema:
            $ref: '#/definitions/syrup.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "429":
          description: Too Many Requests
          headers:
            X-RateLimit-RetryAfter:
              description: Time to wait before retrying (seconds)
              type: integer
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
      summary: Report Invalid Coupon
      tags:
      - syrup
  /syrup/coupons/valid/{id}:
    post:
      description: Report that a coupon code was successfully used
      parameters:
      - description: Optional API key for authentication
        in: header
        name: X-Syrup-API-Key
        type: string
      - description: The ID of the coupon
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          headers:
            X-RateLimit-Limit:
              description: The maximum number of requests allowed per time window
              type: string
            X-RateLimit-Remaining:
              description: The number of requests remaining in the time window
              type: string
            X-RateLimit-Reset:
              description: The time when the rate limit window resets (Unix timestamp)
              type: string
          schema:
            $ref: '#/definitions/syrup.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "429":
          description: Too Many Requests
          headers:
            X-RateLimit-RetryAfter:
              description: Time to wait before retrying (seconds)
              type: integer
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
      summary: Report Valid Coupon
      tags:
      - syrup
  /syrup/version:
    get:
      description: Returns information about the API implementation
      parameters:
      - description: Optional API key for authentication
        in: header
        name: X-Syrup-API-Key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          headers:
            X-RateLimit-Limit:
              description: The maximum number of requests allowed per time window
              type: string
            X-RateLimit-Remaining:
              description: The number of requests remaining in the time window
              type: string
            X-RateLimit-Reset:
              description: The time when the rate limit window resets (Unix timestamp)
              type: string
          schema:
            $ref: '#/definitions/syrup.VersionInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "429":
          description: Too Many Requests
          headers:
            X-RateLimit-RetryAfter:
              description: Time to wait before retrying (seconds)
              type: integer
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/syrup.ErrorResponse'
      summary: Get API Version
      tags:
      - syrup
swagger: "2.0"
