{
    "swagger": "2.0",
    "info": {
        "description": "This is the DiscountDB API documentation",
        "title": "DiscountDB API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "api.discountdb.ch",
    "basePath": "/api/v1",
    "paths": {
        "/coupons/merchants": {
            "get": {
                "description": "Retrieve a list of all merchants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchants"
                ],
                "summary": "Get all merchants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MerchantResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/coupons/search": {
            "get": {
                "description": "Retrieve a list of coupons with optional search, sorting, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupons with filtering and pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "newest",
                            "oldest",
                            "high_score",
                            "low_score"
                        ],
                        "type": "string",
                        "default": "newest",
                        "description": "Sort order (newest, oldest, high_score, low_score)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of items to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CouponsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/coupons/vote": {
            "post": {
                "description": "Vote on a coupon by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "votes"
                ],
                "summary": "Vote on a coupon",
                "parameters": [
                    {
                        "description": "Vote body",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VoteBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/coupons/{id}": {
            "get": {
                "description": "Retrieve a single coupon by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupon by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Coupon"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get API health status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthCheckResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/syrup/coupons": {
            "get": {
                "description": "Returns a paginated list of coupons for a specific domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "syrup"
                ],
                "summary": "List Coupons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional API key for authentication",
                        "name": "X-Syrup-API-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "The website domain to fetch coupons for",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of coupons to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of coupons to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/syrup.CouponList"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "The maximum number of requests allowed per time window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "The number of requests remaining in the time window"
                            },
                            "X-RateLimit-Reset": {
                                "type": "string",
                                "description": "The time when the rate limit window resets (Unix timestamp)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        },
                        "headers": {
                            "X-RateLimit-RetryAfter": {
                                "type": "integer",
                                "description": "Time to wait before retrying (seconds)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/syrup/coupons/invalid/{id}": {
            "post": {
                "description": "Report that a coupon code failed to work",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "syrup"
                ],
                "summary": "Report Invalid Coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional API key for authentication",
                        "name": "X-Syrup-API-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "The ID of the coupon",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/syrup.Success"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "The maximum number of requests allowed per time window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "The number of requests remaining in the time window"
                            },
                            "X-RateLimit-Reset": {
                                "type": "string",
                                "description": "The time when the rate limit window resets (Unix timestamp)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        },
                        "headers": {
                            "X-RateLimit-RetryAfter": {
                                "type": "integer",
                                "description": "Time to wait before retrying (seconds)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/syrup/coupons/valid/{id}": {
            "post": {
                "description": "Report that a coupon code was successfully used",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "syrup"
                ],
                "summary": "Report Valid Coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional API key for authentication",
                        "name": "X-Syrup-API-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "The ID of the coupon",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/syrup.Success"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "The maximum number of requests allowed per time window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "The number of requests remaining in the time window"
                            },
                            "X-RateLimit-Reset": {
                                "type": "string",
                                "description": "The time when the rate limit window resets (Unix timestamp)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        },
                        "headers": {
                            "X-RateLimit-RetryAfter": {
                                "type": "integer",
                                "description": "Time to wait before retrying (seconds)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/syrup/version": {
            "get": {
                "description": "Returns information about the API implementation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "syrup"
                ],
                "summary": "Get API Version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional API key for authentication",
                        "name": "X-Syrup-API-Key",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/syrup.VersionInfo"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "The maximum number of requests allowed per time window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "The number of requests remaining in the time window"
                            },
                            "X-RateLimit-Reset": {
                                "type": "string",
                                "description": "The time when the rate limit window resets (Unix timestamp)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        },
                        "headers": {
                            "X-RateLimit-RetryAfter": {
                                "type": "integer",
                                "description": "Time to wait before retrying (seconds)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/syrup.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Coupon": {
            "type": "object",
            "properties": {
                "categories": {
                    "description": "Metadata",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_type": {
                    "$ref": "#/definitions/models.DiscountType"
                },
                "discount_value": {
                    "type": "number"
                },
                "down_votes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "description": "Required Information",
                    "type": "integer"
                },
                "maximum_discount_amount": {
                    "type": "number"
                },
                "merchant_name": {
                    "type": "string"
                },
                "merchant_url": {
                    "type": "string"
                },
                "minimum_purchase_amount": {
                    "type": "number"
                },
                "regions": {
                    "description": "countries/regions where valid",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "score": {
                    "description": "Score calculated by db",
                    "type": "number"
                },
                "start_date": {
                    "description": "Optional Validity Information",
                    "type": "string"
                },
                "store_type": {
                    "description": "\"online\", \"in_store\", \"both\"",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "terms_conditions": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "up_votes": {
                    "description": "Voting Information",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.CouponsSearchResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Coupon"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "models.DiscountType": {
            "type": "string",
            "enum": [
                "PERCENTAGE_OFF",
                "FIXED_AMOUNT",
                "BOGO",
                "FREE_SHIPPING"
            ],
            "x-enum-varnames": [
                "PercentageOff",
                "FixedAmount",
                "BOGO",
                "FreeShipping"
            ]
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "models.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                },
                "version": {
                    "type": "string",
                    "example": "1.0"
                }
            }
        },
        "models.Merchant": {
            "type": "object",
            "properties": {
                "merchant_name": {
                    "type": "string",
                    "example": "merchant1"
                },
                "merchant_url": {
                    "type": "string",
                    "example": "https://merchant1.com"
                }
            }
        },
        "models.MerchantResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Merchant"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "models.VoteBody": {
            "type": "object",
            "properties": {
                "dir": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "syrup.Coupon": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "DISCOUNT10"
                },
                "description": {
                    "type": "string",
                    "example": "Get 10% off"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "merchant_name": {
                    "type": "string",
                    "example": "Amazon"
                },
                "score": {
                    "type": "number",
                    "example": 5
                },
                "title": {
                    "type": "string",
                    "example": "Discount"
                }
            }
        },
        "syrup.CouponList": {
            "type": "object",
            "properties": {
                "coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/syrup.Coupon"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "syrup.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal Server Error"
                },
                "message": {
                    "type": "string",
                    "example": "Something went wrong"
                }
            }
        },
        "syrup.Success": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "string",
                    "example": "true"
                }
            }
        },
        "syrup.VersionInfo": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "example": "DiscountDB"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        }
    }
}